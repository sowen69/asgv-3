/* eslint-disable react/jsx-props-no-spreading */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { Mesh, MeshStandardMaterial } from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { useFrame } from '@react-three/fiber';
import { Clay } from './Materials';

type GLTFResult = GLTF & {
  nodes: {
    dalmore_1: Mesh;
    dalmore_2: Mesh;
    dalmore_3: Mesh;
  };
  materials: {
    standardSurface5SG: MeshStandardMaterial;
    initialShadingGroup: MeshStandardMaterial;
    ['Liquid2:initialShadingGroup']: MeshStandardMaterial;
  };
};
const clay = Clay();

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Dalmore1.gltf') as GLTFResult;
  const mesh = useRef<Mesh | null>(null);

  useFrame(({ clock }) => {
    const a = clock.getElapsedTime();

    if (mesh.current) {
      mesh.current.rotation.z = a;
      // mesh.current.rotation.y = a / 2;
    }
  });
  return (
    <group {...props} dispose={null}>
      <group name="Scene" scale={[0.02, 0.02, 0.02]} position={[0, -1.5, 0]}>
        <group name="dalmore" rotation={[Math.PI / 2, 0, 0]}>
          {/* <mesh
            name="dalmore_1"
            castShadow
            receiveShadow
            geometry={nodes.dalmore_1.geometry}
            material={materials.initialShadingGroup}
          /> */}
          <mesh
            name="dalmore_2"
            castShadow
            receiveShadow
            geometry={nodes.dalmore_2.geometry}
            material={materials.standardSurface5SG}
            ref={mesh}
          />
          {/* <mesh
            name="dalmore_3"
            castShadow
            receiveShadow
            geometry={nodes.dalmore_3.geometry}
            material={materials.standardSurface5SG}
          /> */}
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/Dalmore1.gltf');
