/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { Mesh } from 'three';

export default function Model(props) {
  const { nodes, materials } = useGLTF('/asgv-3/Cone.glb');

  const mesh = useRef<Mesh | null>(null);

  useFrame(({ clock }) => {
    const a = clock.getElapsedTime();

    if (mesh.current) {
      mesh.current.rotation.y = a;
      // mesh.current.rotation.y = a / 2;
    }
  });

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cone.geometry}
        material={materials['Letherd dots']}
        position={[0, 2, 0]}
        scale={1.36}
        ref={mesh}
      />
    </group>
  );
}

useGLTF.preload('/asgv-3/Cone.glb');
