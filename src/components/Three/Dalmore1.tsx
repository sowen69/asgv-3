/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF, PerspectiveCamera } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    dalmore002: THREE.Mesh;
  };
  materials: {
    ['Letherd dots']: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Dalmore2.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.dalmore002.geometry}
        material={materials['Letherd dots']}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.02}
      />
    </group>
  );
}

useGLTF.preload('/Dalmore2.glb');
